@import './mixins.scss';

.scene {
	.cube {
		.cubie {
			&.cubie-corner-position-ufr {
				transform: translate3d(100px, -100px, 100px);

				.cubie-corner-orientation-0 .face-f .inner-sticker,
				.cubie-corner-orientation-1 .face-r .inner-sticker,
				.cubie-corner-orientation-2 .face-u .inner-sticker {
					@include inner-sticker-front;
				}

				.cubie-corner-orientation-2 {
					.face-u .inner-sticker > *,
					.face-u .inner-sticker:hover::before {
						transform: rotateZ(90deg);
					}
				}
			}
			&.cubie-corner-position-ulf {
				transform: translate3d(-100px, -100px, 100px) rotateY(-90deg);

				.cubie-corner-orientation-0 .face-r .inner-sticker,
				.cubie-corner-orientation-1 .face-u .inner-sticker,
				.cubie-corner-orientation-2 .face-f .inner-sticker {
					@include inner-sticker-front;
				}

				.face-u .inner-sticker > * {
					transform: rotateZ(-90deg);
				}

				.cubie-corner-orientation-1 {
					.face-u .inner-sticker > *,
					.face-u .inner-sticker:hover::before {
						transform: rotateZ(-180deg);
					}

					.face-f .inner-sticker > * {
						transform: rotateZ(-180deg);
					}
				}

				.cubie-corner-orientation-2 {
					.face-u .inner-sticker > * {
						transform: rotateZ(90deg);
					}

					.face-f .inner-sticker > *,
					.face-f .inner-sticker:hover::before {
						transform: rotateZ(90deg);
					}
				}
			}
			&.cubie-corner-position-urb {
				transform: translate3d(100px, -100px, -100px) rotateY(90deg);

				.face-u .inner-sticker > * {
					transform: rotateZ(90deg);
				}
			}
			&.cubie-corner-position-ubl {
				transform: translate3d(-100px, -100px, -100px) rotateY(180deg);

				.face-u .inner-sticker > * {
					transform: rotateZ(-180deg);
				}
			}
			&.cubie-corner-position-drf {
				transform: translate3d(100px, 100px, 100px) rotateX(180deg) rotateY(90deg);

				.cubie-corner-orientation-0 .face-r .inner-sticker,
				.cubie-corner-orientation-1 .face-u .inner-sticker,
				.cubie-corner-orientation-2 .face-f .inner-sticker {
					@include inner-sticker-front;
				}

				.cubie-corner-orientation-0 {
					.face-r .inner-sticker > *,
					.face-r .inner-sticker:hover::before {
						transform: rotateZ(180deg);
					}
				}
			}
			&.cubie-corner-position-dfl {
				transform: translate3d(-100px, 100px, 100px) rotateX(180deg) rotateY(180deg);

				.cubie-corner-orientation-0 .face-f .inner-sticker,
				.cubie-corner-orientation-1 .face-r .inner-sticker,
				.cubie-corner-orientation-2 .face-u .inner-sticker {
					@include inner-sticker-front;
				}

				.cubie-corner-orientation-0 {
					.face-f .inner-sticker > *,
					.face-f .inner-sticker:hover::before {
						transform: rotateZ(180deg);
					}

					.face-r .inner-sticker > * {
						transform: rotateZ(180deg);
					}
				}

				.cubie-corner-orientation-2 {
					.face-u .inner-sticker > *,
					.face-u .inner-sticker:hover::before {
						transform: rotateZ(-90deg);
					}
				}
			}
			&.cubie-corner-position-dbr {
				transform: translate3d(100px, 100px, -100px) rotateX(180deg);
			}
			&.cubie-corner-position-dlb {
				transform: translate3d(-100px, 100px, -100px) rotateX(180deg) rotateY(-90deg);

				.cubie-corner-orientation-2 {
					.face-u .inner-sticker > * {
						transform: rotateZ(-90deg);
					}
				}

				.cubie-corner-orientation-0 {
					.face-f .inner-sticker > * {
						transform: rotateZ(180deg);
					}
				}
			}

			&.cubie-corner-orientation-1 {
				transform: rotateY(-90deg) rotateX(90deg);
			}
			&.cubie-corner-orientation-2 {
				transform: rotateY(90deg) rotateZ(-90deg);
			}
		}
	}
}
